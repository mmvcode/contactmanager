{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","payload","concat","toConsumableArray","console","log","map","contact","id","filter","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","delete","t0","_this2","name","onClick","style","cursor","float","color","bind","marginRight","email","phone","Contacts","deleteContact","newContacts","Fragment","contacts_Contact","deleteClickHandler","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","About","NotFound","Test","title","userId","fetch","then","response","json","EditContact","updatedContact","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6cb6407c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"> </i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas-fa-plus\" /> Add Contact\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/test/test\" className=\"nav-link\">\r\n                <i className=\"fas-fa-plus\" /> Test\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case 'UPDATE_CONTACT':\r\n      console.log(action);\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users`);\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onShowClick = () => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (e) {\r\n      console.log(e);\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { contact } = this.props;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {contact.name}{' '}\r\n                <i\r\n                  className=\"fas fa-sort-down\"\r\n                  onClick={this.onShowClick}\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, contact.id, dispatch)}\r\n                />\r\n                <Link to={`/contact/edit/${contact.id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      color: '#000',\r\n                      float: 'right',\r\n                      marginRight: '1rem'\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {contact.email}</li>\r\n                  <li className=\"list-group-item\">Phone: {contact.phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  deleteContact = id => {\r\n    const { contacts } = this.state;\r\n    const newContacts = contacts.filter(contact => contact.id !== id);\r\n    this.setState({ contacts: newContacts });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-3 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  deleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  type,\r\n  name,\r\n  id,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"name\">{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        name={name}\r\n        id={id}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      `https://jsonplaceholder.typicode.com/users`,\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n    this.setState({ name: '', email: '', phone: '', errors: {} });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact (Controlled inputs)</div>\r\n\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"e.g. John Doe\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"E-mail\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"e.g. jdoe@gmail.com\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    id=\"phone\"\r\n                    placeholder=\"e.g. 555-555-5555\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Example app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, the page you are looking for does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Test extends Component {\r\n  state = {\r\n    title: '',\r\n    userId: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(`Component did nount`);\r\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n      .then(response => response.json())\r\n      .then(json => this.setState({ title: json.title, userId: json.userId }));\r\n  }\r\n\r\n  // Deprecated\r\n  //componentWillMount() {\r\n  //  console.log(`Component will nount`);\r\n  //}\r\n\r\n  componentDidUpdate() {\r\n    console.log(`Component did update`);\r\n  }\r\n\r\n  // Deprecated\r\n  //componentWillUpdate() {\r\n  //  console.log(`Component will update`);\r\n  //}\r\n\r\n  // Deprecated\r\n  //componentWillReceiveProps(nextProps, nextState) {\r\n  //  console.log(`componentWillReceiveProps...`);\r\n  //}\r\n\r\n  render() {\r\n    const { userId, title } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Test component</h1>\r\n        <ul>\r\n          <li>{userId}</li>\r\n          <li>{title}</li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const updatedContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updatedContact\r\n    );\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    this.setState({ name: '', email: '', phone: '', errors: {} });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">\r\n                Edit Contact (Controlled inputs)\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"e.g. John Doe\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"E-mail\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"e.g. jdoe@gmail.com\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    id=\"phone\"\r\n                    placeholder=\"e.g. 555-555-5555\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\nimport Header from './components/layout/Header';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport About from './components/pages/About';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport EditContact from './components/contacts/EditContact';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}